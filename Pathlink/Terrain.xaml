<UserControl x:Class="Pathlink.Terrain"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="Transparent">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition Height="30"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <DataGrid HorizontalAlignment="Left" Width="400" x:Name="ElevationProfileDataGrid" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="true" CanUserResizeRows="False" CanUserSortColumns="False" IsReadOnly="False" RowHeaderWidth="0" SelectionMode="Single" SelectionUnit="FullRow" HorizontalGridLinesBrush="#fff" VerticalGridLinesBrush="#fff" RowBackground="Transparent" Background="Transparent" BorderThickness="1" BorderBrush="White" Foreground="White" SelectionChanged="ElevationProfileDataGrid_SelectionChanged" CellEditEnding="ElevationProfileDataGrid_CellEditEnding" Padding="0">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Orange"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="Height" Value="32"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="" Binding="{Binding Count, Mode=TwoWay}" MinWidth="5" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Distância" Binding="{Binding DistanceFromA, StringFormat=N3}" Width="*"
                    IsReadOnly="True" MinWidth="120">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Elevação" Binding="{Binding Elevation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*" MinWidth="120">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Obstáculo" Binding="{Binding ObstructionDisplay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="*" MinWidth="120">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <Button Content="Generate Terrain" Height="30" Width="200" Foreground="White" Background="#151025" FontSize="18" BorderThickness="0" x:Name="GenerateTerrain" Click="GenerateTerrain_Click" Margin="10">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="RootBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10" RenderTransformOrigin="0.5,0.5">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RootBorder" />
                                                    <DoubleAnimation Duration="0:0:0.05" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RootBorder" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RootBorder" />
                                                    <DoubleAnimation Duration="0:0:0.05" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RootBorder" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Content="Altura Automática" Height="30" Width="200" Foreground="White" Background="#151025" FontSize="18" BorderThickness="0" x:Name="AutoHeight" Margin="10" Click="AutoHeight_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="RootBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10" RenderTransformOrigin="0.5,0.5">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RootBorder" />
                                                    <DoubleAnimation Duration="0:0:0.05" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RootBorder" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RootBorder" />
                                                    <DoubleAnimation Duration="0:0:0.05" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RootBorder" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
                <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="25 15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <!-- Botão de incremento -->
                    <Button Height="20" Width="20" Grid.Row="0" Grid.Column="1" Background="Transparent" BorderThickness="1">
                        <TextBlock Text="+" FontSize="16" Margin="0" Padding="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" MouseLeftButtonDown="ElevateAntenaA"/>
                    </Button>

                    <!-- TextBlock centralizado entre os botões -->
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="..." Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" x:Name="AlturaAntena1"/>

                    <!-- Botão de decremento -->
                    <Button Height="20" Width="20" Grid.Row="2" Grid.Column="1" Background="Transparent" BorderThickness="1">
                        <TextBlock Text="-" FontSize="16" Margin="0" Padding="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" MouseLeftButtonDown="LowerAntenaA"/>
                    </Button>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="25 15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <!-- Botão de incremento -->
                    <Button Height="20" Width="20" Grid.Row="0" Grid.Column="1" Background="Transparent" BorderThickness="1">
                        <TextBlock Text="+" FontSize="16" Margin="0" Padding="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" MouseLeftButtonDown="ElevateAntenaB"/>
                    </Button>

                    <!-- TextBlock centralizado entre os botões -->
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="..." Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" x:Name="AlturaAntena2"/>

                    <!-- Botão de decremento -->
                    <Button Height="20" Width="20" Grid.Row="2" Grid.Column="1" Background="Transparent" BorderThickness="1">
                        <TextBlock Text="-" FontSize="16" Margin="0" Padding="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" MouseLeftButtonDown="LowerAntenaB"/>
                    </Button>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1">
                    <Grid Grid.Column="1" VerticalAlignment="Bottom">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Canvas Grid.Row="3" x:Name="ElevationProfileCanvas" Background="#222" MouseLeftButtonDown="ElevationProfileCanvas_MouseLeftButtonDown" MouseEnter="ElevationProfileDataGrid_MouseEnter" MouseLeave="ElevationProfileDataGrid_MouseLeave" Grid.ColumnSpan="2"/>
        <Popup x:Name="TerrainOverlay" PopupAnimation="Fade" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <Grid Background="#333" Height="40" Width="120">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" x:Name="DistanceTextBlock"/>
                <TextBlock Grid.Column="1" x:Name="ElevationTextBlock"/>
            </Grid>
        </Popup>
    </Grid>
</UserControl>
